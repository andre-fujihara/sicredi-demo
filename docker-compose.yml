version: "3.9"

services:
  sicredi-api:
    build:
      context: .
      dockerfile: Dockerfile
    image: 'sicredi-api:latest'
    container_name: sicredi-api
    links:
      - sicredi-mongo
      - sicredi-kafka
    ports:
      - "8080:8080"
    healthcheck:
      retries: 3
      timeout: 5s
    environment:
      CONFIG_MONGODB_ADMINUSERNAME: root
      CONFIG_MONGODB_ADMINPASSWORD: example
      CONFIG_MONGODB_HOST: sicredi-mongo:27017
    depends_on:
      - sicredi-mongo
      - sicredi-kafka

  sicredi-mongo:
    image: mongo
    restart: always
    container_name: sicredi-mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  sicredi-mongo-express:
    image: mongo-express
    restart: always
    container_name: sicredi-mongo-express
    links:
      - sicredi-mongo
    ports:
      - "8082:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@sicredi-mongo:27017/
    depends_on:
      - sicredi-mongo

  sicredi-zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  sicredi-kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=sicredi-zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - sicredi-zookeeper

volumes:
  databasevolume:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local